# This workflow will
# - install Python dependencies;
# - lint and run tests with several Python versions.
# For more information see:
# https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Test Application

on:
  workflow_dispatch:
  push:
    branches: [ "**" ]

jobs:
  python:
    name: Test Application
    runs-on: ubuntu-22.04
    env:
      APP: pipo_hub
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.11", "3.12" ]

    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.head_ref }}   # checkout the correct branch name
        fetch-depth: 0                # fetch the whole repo history

    - name: Git Version
      id: version
      uses: codacy/git-version@2.8.0
      with:
        release-branch: ${{ github.event.repository.default_branch }}

    - name: Set variables
      if: success()
      id: prepare
      shell: bash
      run: |
        echo version=${TAG%%-*} >> $GITHUB_OUTPUT
      env:
        TAG: ${{ steps.version.outputs.version }}

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      run: |
        make poetry_setup

    - name: Load cached venv
      id: cached-dependencies
      uses: actions/cache@v4
      with:
        path: .venv
        key: ${{ runner.os }}-venv-python${{ matrix.python-version }}-${{ hashFiles('**/pyproject.toml') }}

    - name: Install dependencies
      if: steps.cached-dependencies.outputs.cache-hit != 'true'
      run: |
        make test_setup

    - name: Set project version
      run: |
        make set_version VERSION=${{ steps.prepare.outputs.version }}

    - name: Run ruff
      run: |
        make ruff

    - name: Format
      run: |
        make format

    - name: Run vulture
      run: |
        make vulture

    - name: Test
      run: |
        poetry run dynaconf write yaml -y -p ./tests/ -e test \
          -s queue_broker_url=${{ secrets.TEST_RABBITMQ_URL }}; \
        make test
